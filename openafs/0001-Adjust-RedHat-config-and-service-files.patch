From 88a6b1ca41091538d446eae90adc8e5ec4310b8b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michael=20La=C3=9F?= <lass@mail.uni-paderborn.de>
Date: Sat, 13 Sep 2025 20:33:21 +0200
Subject: [PATCH] Adjust RedHat config and service files

Basically we reuse upstream's config for RedHat but we change a few things:

 * adjust paths to match ArchLinux packaging
 * remove the dynamic creation of CellServDB
 * enable network traffic encryption by default
---
 src/packaging/RedHat/openafs-cacheinfo        |  2 +-
 .../RedHat/openafs-client-systemd-helper.sh   | 22 +++++++++----------
 src/packaging/RedHat/openafs-client.service   |  7 +++---
 src/packaging/RedHat/openafs-server.service   |  4 ++--
 4 files changed, 17 insertions(+), 18 deletions(-)

diff --git a/src/packaging/RedHat/openafs-cacheinfo b/src/packaging/RedHat/openafs-cacheinfo
index dd0fd05cb..1663c79b5 100755
--- a/src/packaging/RedHat/openafs-cacheinfo
+++ b/src/packaging/RedHat/openafs-cacheinfo
@@ -1 +1 @@
-/afs:/usr/vice/cache:100000
+/afs:/var/cache/openafs:100000
diff --git a/src/packaging/RedHat/openafs-client-systemd-helper.sh b/src/packaging/RedHat/openafs-client-systemd-helper.sh
index df8bdcf0a..60d723c9d 100755
--- a/src/packaging/RedHat/openafs-client-systemd-helper.sh
+++ b/src/packaging/RedHat/openafs-client-systemd-helper.sh
@@ -7,7 +7,7 @@ set -e
 
 UMOUNT_TIMEOUT=30
 
-[ -f /etc/sysconfig/openafs ] && . /etc/sysconfig/openafs
+[ -f /etc/conf.d/openafs ] && . /etc/conf.d/openafs
 
 case $1 in
     ExecStart)
@@ -21,28 +21,26 @@ case $1 in
 	    echo AFS client appears to be running -- skipping startup
 	    exit 0
 	fi
-	sed -n 'w/usr/vice/etc/CellServDB' /usr/vice/etc/CellServDB.local /usr/vice/etc/CellServDB.dist
-	chmod 0644 /usr/vice/etc/CellServDB
 
 	# If the kernel module is already initialized from a previous client
 	# run, it must be unloaded and loaded again. So if the module is
 	# currently loaded, unload it in case it was (partly) initialized.
 	if lsmod | grep -wq ^openafs ; then
-	    /sbin/rmmod --verbose openafs
+	    /usr/bin/rmmod --verbose openafs
 	fi
-	/sbin/modprobe --verbose openafs
-	exec /usr/vice/etc/afsd $AFSD_ARGS
+	/usr/bin/modprobe --verbose openafs
+	exec /usr/bin/afsd $AFSD_ARGS
 	;;
 
     ExecStop)
-	if /bin/umount --verbose /afs ; then
+	if /usr/bin/umount --verbose /afs ; then
 	    exit 0
 	else
 	    echo "Failed to unmount /afs: $?"
 	fi
 
 	state=$(systemctl is-system-running || true)
-	if [ "$state" = stopping ] && [ x"$UMOUNT_TIMEOUT" != x ] && /bin/mountpoint --quiet /afs ; then
+	if [ "$state" = stopping ] && [ x"$UMOUNT_TIMEOUT" != x ] && /usr/bin/mountpoint --quiet /afs ; then
 	    # If we are shutting down the system, failing to umount /afs
 	    # can lead to longer delays later as systemd tries to forcibly
 	    # kill our afsd processes. So retry the umount a few times,
@@ -52,10 +50,10 @@ case $1 in
 	    interval=3
 	    for (( i = 0; i < $UMOUNT_TIMEOUT; i += $interval )) ; do
 		sleep $interval
-		if /bin/umount --verbose /afs ; then
+		if /usr/bin/umount --verbose /afs ; then
 		    exit 0
 		fi
-		if ! /bin/mountpoint --quiet /afs ; then
+		if ! /usr/bin/mountpoint --quiet /afs ; then
 		    echo "mountpoint /afs disappeared; bailing out"
 		    exit 0
 		fi
@@ -66,8 +64,8 @@ case $1 in
 	;;
 
     ExecStopPost)
-	/usr/vice/etc/afsd -shutdown || true
-	/sbin/rmmod --verbose openafs || true
+	/usr/bin/afsd -shutdown || true
+	/usr/bin/rmmod --verbose openafs || true
 	if lsmod | grep -wq ^openafs ; then
 	    echo "Cannot unload the OpenAFS client kernel module."
 	    echo "systemd will consider the openafs-client.service unit inactive, but the AFS client may still be running."
diff --git a/src/packaging/RedHat/openafs-client.service b/src/packaging/RedHat/openafs-client.service
index 5036709f3..10e8bcd35 100644
--- a/src/packaging/RedHat/openafs-client.service
+++ b/src/packaging/RedHat/openafs-client.service
@@ -7,9 +7,10 @@ Before=remote-fs.target
 [Service]
 Type=forking
 RemainAfterExit=true
-ExecStart=   /usr/vice/etc/openafs-client-systemd-helper.sh ExecStart
-ExecStop=    /usr/vice/etc/openafs-client-systemd-helper.sh ExecStop
-ExecStopPost=/usr/vice/etc/openafs-client-systemd-helper.sh ExecStopPost
+ExecStart=   /usr/lib/openafs/openafs-client-systemd-helper.sh ExecStart
+ExecStartPost=/usr/bin/fs setcrypt on
+ExecStop=    /usr/lib/openafs/openafs-client-systemd-helper.sh ExecStop
+ExecStopPost=/usr/lib/openafs/openafs-client-systemd-helper.sh ExecStopPost
 KillMode=process
 GuessMainPID=no
 SendSIGKILL=no
diff --git a/src/packaging/RedHat/openafs-server.service b/src/packaging/RedHat/openafs-server.service
index ac9d3c411..0a4b3bfea 100644
--- a/src/packaging/RedHat/openafs-server.service
+++ b/src/packaging/RedHat/openafs-server.service
@@ -3,8 +3,8 @@ Description=OpenAFS Server Service
 After=syslog.target network.target
 
 [Service]
-EnvironmentFile=-/etc/sysconfig/openafs
-ExecStart=/usr/afs/bin/bosserver -nofork $BOSSERVER_ARGS
+EnvironmentFile=-/etc/conf.d/openafs
+ExecStart=/usr/bin/bosserver -nofork $BOSSERVER_ARGS
 ExecStop=/usr/bin/bos shutdown localhost -wait -localauth
 
 [Install]
-- 
2.51.0

