From 2fb8d5167f40d5a72568ad421531f179483506b0 Mon Sep 17 00:00:00 2001
From: Cheyenne Wills <cwills@sinenomine.net>
Date: Thu, 6 Jun 2024 10:42:57 -0600
Subject: [PATCH 37/37] Linux 6.10: Move 'inline' before func return type
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

With Linux 6.10 commit:
    "kbuild: turn on -Wextra by default" (f5982cceb3)
there are additional compiler warnings that can turn
into build errors when --enable-checking is used.

    "error: ‘inline’ is not at beginning of declaration
    [-Werror=old-style-declaration]"

The error is due to the return type preceding the "inline" keyword
in function declarations.

Fix the declarations for file_can_read_pages() and
afs_linux_readpage_fastpath() to have the proper ordering of the
static/inline keywords attributes so they precede the return type.

Just a note that the `static` and `inline` keywords must precede a
function's return type.

Change-Id: I3ff9d45c119e70a90faf18fbf6d49fb6b9adcf33
Reviewed-on: https://gerrit.openafs.org/15768
Reviewed-by: Andrew Deason <adeason@sinenomine.net>
Tested-by: Andrew Deason <adeason@sinenomine.net>
---
 src/afs/LINUX/osi_vnodeops.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/afs/LINUX/osi_vnodeops.c b/src/afs/LINUX/osi_vnodeops.c
index 0e92215cb..ba0d9bceb 100644
--- a/src/afs/LINUX/osi_vnodeops.c
+++ b/src/afs/LINUX/osi_vnodeops.c
@@ -2454,7 +2454,7 @@ afs_linux_read_cache(struct file *cachefp, struct page *page,
 /*
  * Return true if the file has a mapping that can read pages
  */
-static int inline
+static inline int
 file_can_read_pages(struct file *fp)
 {
 #if defined(STRUCT_ADDRESS_SPACE_OPERATIONS_HAS_READ_FOLIO)
@@ -2467,7 +2467,7 @@ file_can_read_pages(struct file *fp)
     return 0;
 }
 
-static int inline
+static inline int
 afs_linux_readpage_fastpath(struct file *fp, struct page *pp, int *codep)
 {
     loff_t offset = page_offset(pp);
-- 
2.45.2

